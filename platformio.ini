; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev ;plataforma de desarrollo (enviroment) por defecto
data_dir = src/data ;carpeta donde van a estar alojados los archivos HTML, CSS, etc

[common] ;etiqueta comun a todos los enviroments
lib_deps = ;declar todas las libretrias que se van a estar utilizando
    ;ottowinter/ESPAsyncWebServer-esphome@^3.1.0 ;https://registry.platformio.org/libraries/ottowinter/ESPAsyncWebServer-esphome/installation
    ;bblanchon/ArduinoJson@^6.21.3 ;https://registry.platformio.org/libraries/bblanchon/ArduinoJson/installation
    ;knolleary/PubSubClient@^2.8 ;https://registry.platformio.org/libraries/knolleary/PubSubClient/installation
    ;paulstoffregen/Time@^1.6.1 ;https://registry.platformio.org/libraries/paulstoffregen/Time/installation

[env:esp32dev]
platform = espressif32
framework = arduino
board = esp32dev ;igual que el enviment, lo que estamos desarrollando arriba
board_build.mcu = esp32 ;declaracion del mcu
board_build.partitions = huge_app.csv ; le decimos al platformio.ini que vaya a buscar este archivo (huge_app.csv) ...que por defecto lo trae platformio... y va a tomar las particiones para el esp32 del board_built.mcu = esp32
upload_protocol = esptool ;protocolo de subida
lib_deps = 
    ${common.lib_deps} ;librerias de dependencia, con ${common.lib_debs} indicamos dar un salto a la etiqueta [common] y obtener las librerias de lib_debs
    ;paulstoffregen/Time@^1.6.1 ;https://registry.platformio.org/libraries/paulstoffregen/Time/installation
upload_speed = 921600 ;velocidad de subida a la placa
upload_port = COM3 ;puerto de subida 
monitor_port = COM3 ;puerto de monitoreo